services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    environment:
      SA_PASSWORD: "${DB_PASSWORD:-Ladeda78}"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    volumes:
      - mssql_data:/var/opt/mssql

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend
    depends_on:
      - sqlserver
    environment:
      - DB_HOST=${DB_HOST:-sqlserver}
      - DB_USER=${DB_USER:-sa}
      - DB_PASSWORD=${DB_PASSWORD:-Ladeda78}
      - DB_NAME=${DB_NAME:-LubricentroDB2}
      - DB_DRIVER=${DB_DRIVER:-ODBC+Driver+18+for+SQL+Server}
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./app:/project/app

  db-init:
    image: mcr.microsoft.com/mssql/server:2022-latest
    depends_on:
      - sqlserver
    environment:
      - DB_USER=${DB_USER:-sa}
      - DB_PASSWORD=${DB_PASSWORD:-Ladeda78}
      - DB_NAME=${DB_NAME:-LubricentroDB2}
    volumes:
      - ./db/LubricentroDB2.sql:/init.sql
    entrypoint: ["/bin/bash", "-c"]
    command: >
      "
      sleep 25 &&
      /opt/mssql-tools/bin/sqlcmd -S sqlserver -U $$DB_USER -P $$DB_PASSWORD -Q 'IF DB_ID(''$$DB_NAME'') IS NULL BEGIN :r /init.sql END'
      "
    restart: "no"

volumes:
  mssql_data:
